
USES "UI"
Uses "OS"
#Include "LOG.tbasicu"
'#resource "log.rc"
'DIALOG New units, Name IDD_DLG1, %HWND_DESKTOP

'For the demo, expand the console

Console_SetScreenBufferSize(120,300)
Console_ShowWindow(%Console_SW_SHOWMAXIMIZED)




dim logger as tLogthis()


'Function SetLogFile (logFileFullPath as String, logFileMaxSize as Long)

logger.SetLogFile (APP_ScriptPath & "Demo.log", 1024) ' MaxSize = 1Ko for demo purpose



'function write(logWhere as long = 0, logWhat as String, optional logWhatTitle as string, severityTag as Byte) as Boolean
'Returns %TRUE if everything went well

'logWhere equates :

'%LT_Debug = 1 ' will display only if isDebug = %TRUE
'%LT_Time = 2 ' will prepend DateTime$
'%LT_ToConsole 
'%LT_ToConsoleTitle
'%LT_ToMsgBox
'%LT_ToLogFile
'%LT_ToStatusBar= 64 as long - Not yet in this demo
'%LT_ToRichedit = 128 as Long ? - Not yet implemented

'severityTag equates : 

'%TAG_PANIC ' 1
'%TAG_ALERT ' 2
'%TAG_CRIT
'%TAG_ERR
'%TAG_WARN
'%TAG_NOTICE
'%TAG_INFO
'%TAG_DEBUG ' 8
'%TAG_NOTAG ' 9

logger.isDebug = %TRUE

logger.write(%LT_ToMsgBox+%LT_ToConsole, "This is a log to textBox and console", "This is a title", %TAG_INFO)

logger.write(%LT_ToMsgBox+%LT_ToConsole, "Next, set the console title", "EXAMPLE 2", %TAG_INFO)

logger.write(%LT_ToConsoleTitle, "This is a title", , %TAG_NOTAG)

logger.write(%LT_ToMsgBox+%LT_ToConsole, "On console, you can jump a line too", "EXAMPLE 4", %TAG_NOTAG)

logger.write(%LT_ToConsole, "", "", %TAG_NOTAG)

logger.write(%LT_Time+%LT_ToConsole, "Log with timestamp", "EXAMPLE 5", %TAG_DEBUG)

logger.write(%LT_ToConsole, "There are 8+1 levels of severity, as WARNING or ERROR ...", "EXAMPLE 6", %TAG_ERR)

logger.ColorText = %CONSOLE_FOREGROUND_GREEN+%CONSOLE_FOREGROUND_INTENSITY
logger.TagDebug = "[DEFAULTS ARE MODIFIABLE]"
' see complete list in Function _Create() in LOG.tbasicu
logger.write(%LT_ToConsole, "Every default setting is modifiable from your own script", "EXAMPLE 7", %TAG_DEBUG)

logger.write(%LT_ToMsgBox, "Now logging to file...", "EXAMPLE 8", %TAG_WARN)

logger.write(%LT_Time+%LT_ToLogFile, "This is a log in a file...", "EXAMPLE 8", %TAG_INFO)

OS_ShellExecute("open", APP_ScriptPath & "Demo.log",,,%SW_SHOWNORMAL)

logger.isDebug = %FALSE
logger.write(%LT_ToConsole, "End of the demo. This won't be written because of logger.isDebug = %FALSE", "EXAMPLE 9", %TAG_DEBUG)

logger.write(%LT_ToConsoleTitle+%LT_ToConsole, "The End.", , %TAG_NOTAG)

Printl "Press a key to quit"
waitkey




'DIALOG SHOW MODAL IDD_DLG1.Handle

'Function SetStatusbar(statusbarhWnd as Number, statusbarctrlID as number, statusbarlPart as Number)
'logger.SetStatusbar(

'CallBack Function IDD_DLG1_OnLoad() As Long
  ''control set Resize CBHNDL, IDC_SBR1.id          , 1, 0, 1, 1
'  control set Resize CBHNDL, IDC_BTN1.id          , 0, 1, 0, 1
'end Function
